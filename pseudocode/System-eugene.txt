//System variables
const int sliderDistance = ??? (cm);
const int powerToSpeed = ??? (1mm/s / power ) determined through experimentation



// sensors
Sensors s1, s2  = sensorTouch;	//touch s1 for pencil being loaded at the magazine, s2 for ???
Sensors s3 = sensorColorNXT;	//color s3 for sorting pencil colors
Sensors s4 = sensorSonar; 	//sonar s4 for human apporaching 


// motors
Motor m1;  		// motor for piston that pushing pencil forword
Motor m2; 		// motor for 2 wheels that grab onto pencil and moves it forward
Motor m3; 		operating the pencil recieving tray


// functions: 

bool no_pencil (){
  return SensorValue[s1];
}

pslide_move (bool forward){
  power = 20;
  if (foward)
     power = -power;
  m1.setPower(power);
  
  motorEncoder encode1
  encode.clear();
  
  while (abs(encode* 1/120) < sliderDistance ){}
  m1.setPower (0); 
}

roller_move (){
  m2.setPower(100);
  
  accelerometer a1; 

  //let int s1 be defined as an integer that 
  while (a1 > s1){
    // empty method for keep pushing
  }
  
  m2.setPower (s1);  

  while (){
     // wait until the function is finished, 
     // either by timmer or a certain why to define if a function is shapened
  }
  
  while (encode* 1/120 < sliderDistance ){}
  m1.setPower (0); 
}

void tray_move (){
  //move according to color
}

void sharpening () {}

task main (){

	// the idea is that the pencil sharpener will process each pencil one by one
  while (true){
    if (!no_pencil()){
      int colorReserved = color-detect();
      
      

      slide_move(true);

      roller_move();

      shapening(); 	// no need for anything pretty much since the electric sharpener will take care of i

      slide_move(false);  //move back, and will be pushed into the ramp,      

      tray_move(colorReserved);
      
    }
  }
}
    
    	
	

}


}